version: '3.8'
name: template01
services:
  api:
    build:
      context: ./todo
      dockerfile: Dockerfile.dev
    volumes: # Mounts the ./todo directory inside the container to /code. This is typically used for live-reloading during development.
      - ./todo:/code  # Sync local development directory with the container
    depends_on:
        - postgres_db
        - broker
    ports:
      - "8000:8000"  # Expose container port 8000 to host port 8000  
  api2:
    build:
      context: ./microservice_02
      dockerfile: Dockerfile.dev
    volumes:
      - ./microservice_02:/code  # Sync local development directory with the container
    depends_on:
        - postgres_db
        - broker
    ports:
      - "8002:8000"  # Expose container port 8000 to host port 8000  
  postgres_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresCont
    environment:
        - POSTGRES_USER=areebahmed
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=mydatabase
    ports:
        - '5433:5432'
    volumes: #Persists PostgreSQL data between container restarts using a named volume postgres_db.
        - postgres_db:/var/lib/postgresql/data
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
volumes: #postgres_db: Defines a named volume postgres_db that uses the local driver. This volume is used to persist PostgreSQL data.
  postgres_db:
    driver: local
networks:
  default:
    driver: bridge